{"ast":null,"code":"//创建变量\nlet fireworksField = \"\",\n  opt = {},\n  particles = [],\n  rockets = [],\n  //最大爆炸粒子数量，与每颗烟花爆炸的粒子数关联，影响爆炸后粒子的消失时间\n  MAX_PARTICLES = 0,\n  SCREEN_WIDTH = 0,\n  SCREEN_HEIGHT = 0,\n  SCREEN_TOP,\n  SCREEN_BOTTOM,\n  SCREEN_LEFT,\n  SCREEN_RIGHT,\n  Z_INDEX,\n  canvas,\n  context;\nlet reloadTimer;\nlet loopTimer;\n\n//粒子类\nclass Particle {\n  constructor(pos) {\n    this.pos = {\n      x: pos ? pos.x : 0,\n      y: pos ? pos.y : 0\n    };\n    this.vel = {\n      x: 0,\n      y: 0\n    };\n    this.shrink = 0.97;\n    this.size = 2;\n    this.resistance = 1;\n    this.gravity = 0;\n    this.flick = false;\n    this.alpha = 1;\n    this.fade = 0;\n    this.color = 0;\n  }\n  update() {\n    // apply resistance\n    this.vel.x *= this.resistance;\n    this.vel.y *= this.resistance;\n    // gravity down\n    this.vel.y += this.gravity;\n    // update position based on speed\n    this.pos.x += this.vel.x;\n    this.pos.y += this.vel.y;\n    // shrink\n    this.size *= this.shrink;\n    // fade out\n    this.alpha -= this.fade;\n  }\n  render(c) {\n    if (!this.exists()) {\n      return;\n    }\n    c.save();\n    c.globalCompositeOperation = 'lighter';\n    let x = this.pos.x,\n      y = this.pos.y,\n      r = this.size / 2;\n    let gradient = c.createRadialGradient(x, y, 0.1, x, y, r);\n    gradient.addColorStop(0.1, \"rgba(255,255,255,\" + this.alpha + \")\");\n    gradient.addColorStop(0.8, \"hsla(\" + this.color + \", 100%, 50%, \" + this.alpha + \")\");\n    gradient.addColorStop(1, \"hsla(\" + this.color + \", 100%, 50%, 0.1)\");\n    c.fillStyle = gradient;\n    c.beginPath();\n    c.arc(this.pos.x, this.pos.y, this.flick ? Math.random() * this.size : this.size, 0, Math.PI * 2, true);\n    c.closePath();\n    c.fill();\n    c.restore();\n  }\n  exists() {\n    return this.alpha >= 0.1 && this.size >= 1;\n  }\n}\n\n//装弹类\nclass Rocket extends Particle {\n  constructor(x) {\n    super({\n      x: x,\n      y: SCREEN_HEIGHT\n    });\n    this.explosionColor = 0;\n  }\n  explode() {\n    //爆炸的粒子数量\n    for (let i = 0; i < opt.explode_debris_num; i++) {\n      let particle = new Particle(this.pos);\n      let angle = Math.random() * Math.PI * 2;\n      // emulate 3D effect by using cosine and put more particles in the middle\n      let speed = Math.cos(Math.random() * Math.PI / 2) * 15;\n      particle.vel.x = Math.cos(angle) * speed;\n      particle.vel.y = Math.sin(angle) * speed;\n      //爆炸的粒子大小\n      particle.size = opt.explode_particles_size;\n      particle.gravity = 0.2;\n      particle.resistance = 0.9 + opt.explode_particles_resistance * 0.01;\n      particle.shrink = Math.random() * 0.05 + 0.95;\n      particle.flick = true;\n      particle.color = this.explosionColor;\n      particles.push(particle);\n    }\n  }\n  render(c) {\n    if (!this.exists()) {\n      return;\n    }\n    c.save();\n    c.globalCompositeOperation = 'lighter';\n    let x = this.pos.x,\n      y = this.pos.y,\n      r = this.size / 2;\n    let gradient = c.createRadialGradient(x, y, 0.1, x, y, r);\n    gradient.addColorStop(0.1, \"rgba(255, 255, 255 ,\" + this.alpha + \")\");\n    gradient.addColorStop(1, \"rgba(0, 0, 0, \" + this.alpha + \")\");\n    c.fillStyle = gradient;\n    c.beginPath();\n    c.arc(this.pos.x, this.pos.y, this.flick ? Math.random() * this.size / 2 + this.size / 2 : this.size, 0, Math.PI * 2, true);\n    c.closePath();\n    c.fill();\n    c.restore();\n  }\n}\nexport default {\n  /**\r\n   * 初始化烟花\r\n   * @param dom\r\n   * @param options：\r\n   * 1、width 宽度 单位px\r\n   * 2、height 高度 单位px\r\n   * 3、top，bottom，left，right 绝对布局参数\r\n   * 2、frequency 烟花发射频率 单位：毫秒\r\n   * 3、launch_speed 烟花发射速度 （推荐值：5-10）\r\n   * 4、launch_particles_size 烟花发射粒子大小（推荐值：0-10）\r\n   * 5、explode_particles_resistance 爆炸粒子半径 （推荐值：4-10）\r\n   * 6、explode_debris_num 爆炸粒子个数\r\n   * 7、explode_particles_size 爆炸粒子大小\r\n   * 8、z_index canvas层级\r\n   * @returns {string}\r\n   */\n  init: function (dom, options) {\n    if (!dom || typeof dom !== \"string\" || document.getElementById(dom) == null) {\n      console.log(\"id对象不存在\");\n    } else {\n      fireworksField = document.getElementById(dom);\n      //配置默认\n      opt.frequency = options.frequency || 200;\n      opt.launch_speed = options.launch_speed || 12;\n      opt.launch_particles_size = options.launch_particles_size || 0;\n      opt.explode_debris_num = Math.random() * 10 + (options.debris_num || 150);\n      opt.explode_particles_resistance = options.explode_particles_resistance || 5;\n      opt.explode_particles_size = options.explode_particles_resistance || 10;\n      SCREEN_WIDTH = options.width || document.body.clientWidth + \"px\";\n      SCREEN_HEIGHT = options.height || document.body.clientHeight + \"px\";\n      SCREEN_TOP = options.top || '0px';\n      SCREEN_BOTTOM = options.bottom || '0px';\n      SCREEN_LEFT = options.left || '0px';\n      SCREEN_RIGHT = options.right || '0px';\n      Z_INDEX = options.zIndex || 100;\n      MAX_PARTICLES = opt.explode_debris_num * 10;\n\n      //创建canvas\n      canvas = document.createElement('canvas');\n      canvas.id = 'fireworksField';\n      canvas.style.width = SCREEN_WIDTH;\n      canvas.style.height = SCREEN_HEIGHT;\n      canvas.style.position = 'absolute';\n      canvas.style.top = SCREEN_TOP;\n      canvas.style.bottom = SCREEN_BOTTOM;\n      canvas.style.left = SCREEN_LEFT;\n      canvas.style.right = SCREEN_RIGHT;\n      canvas.style.opacity = 1;\n      canvas.style.zIndex = Z_INDEX;\n      context = canvas.getContext('2d');\n      fireworksField.appendChild(canvas);\n      //XX毫秒执行一次装弹\n      reloadTimer = setInterval(this.reload, opt.frequency);\n      loopTimer = setInterval(this.loop, 50);\n    }\n  },\n  reload: function () {\n    if (rockets.length < 100) {\n      let rocket = new Rocket(Math.random() * SCREEN_WIDTH);\n      rocket.explosionColor = Math.floor(Math.random() * 360 / 10) * 10;\n      rocket.vel.y = -1 * opt.launch_speed;\n      rocket.vel.x = Math.random() * 2 - 1;\n      //发射轨迹的大小 0：无轨迹\n      rocket.size = opt.launch_particles_size;\n      //发射轨迹从发射到爆炸的逐渐放大或缩小指数，呈指数增长\n      rocket.shrink = 1.008;\n      //发射轨迹的重力\n      rocket.gravity = 0.005;\n      rockets.push(rocket);\n    }\n  },\n  loop: function () {\n    //调整宽高\n    if (SCREEN_WIDTH !== window.innerWidth) {\n      canvas.width = SCREEN_WIDTH = window.innerWidth;\n    }\n    if (SCREEN_HEIGHT !== window.innerHeight) {\n      canvas.height = SCREEN_HEIGHT = window.innerHeight;\n    }\n    // clear canvas\n    context.fillStyle = \"rgba(0, 0, 0, 0.05)\";\n    context.clearRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\n\n    //设置存在的Rockets数组\n    let existingRockets = [];\n    for (let i = 0; i < rockets.length; i++) {\n      //更新渲染\n      rockets[i].update();\n      rockets[i].render(context);\n      // calculate distance with Pythagoras\n      let distance = Math.sqrt(Math.pow(SCREEN_WIDTH - rockets[i].pos.x, 2) + Math.pow(SCREEN_HEIGHT - rockets[i].pos.y, 2));\n      // random chance of 1% if rockets is above the middle\n      let randomChance = rockets[i].pos.y < SCREEN_HEIGHT * 2 / 3 ? Math.random() * 100 <= 1 : false;\n      /* Explosion rules\r\n       - 80% of screen\r\n       - going down\r\n       - close to the mouse\r\n       - 1% chance of random explosion\r\n       */\n      if (rockets[i].pos.y < SCREEN_HEIGHT / 5 || rockets[i].vel.y >= 0 || distance < 50 || randomChance) {\n        rockets[i].explode();\n      } else {\n        existingRockets.push(rockets[i]);\n      }\n    }\n    rockets = existingRockets;\n    let existingParticles = [];\n    for (let j = 0; j < particles.length; j++) {\n      particles[j].update();\n      // render and save particles that can be rendered\n      if (particles[j].exists()) {\n        particles[j].render(context);\n        existingParticles.push(particles[j]);\n      }\n    }\n    // update array with existing particles - old particles should be garbage collected\n    particles = existingParticles;\n    while (particles.length > MAX_PARTICLES) {\n      particles.shift();\n    }\n  },\n  start: function () {\n    if (reloadTimer) {\n      clearInterval(reloadTimer);\n    }\n    if (loopTimer) {\n      clearInterval(loopTimer);\n    }\n    reloadTimer = setInterval(this.reload, opt.frequency);\n    //XX毫秒执行一次刷新canvas\n    loopTimer = setInterval(this.loop, 50);\n  },\n  stop: function () {\n    clearInterval(reloadTimer);\n    //20秒后清除loop定时器\n    setTimeout(function () {\n      clearInterval(loopTimer);\n    }, 20000);\n  }\n};","map":{"version":3,"names":["fireworksField","opt","particles","rockets","MAX_PARTICLES","SCREEN_WIDTH","SCREEN_HEIGHT","SCREEN_TOP","SCREEN_BOTTOM","SCREEN_LEFT","SCREEN_RIGHT","Z_INDEX","canvas","context","reloadTimer","loopTimer","Particle","constructor","pos","x","y","vel","shrink","size","resistance","gravity","flick","alpha","fade","color","update","render","c","exists","save","globalCompositeOperation","r","gradient","createRadialGradient","addColorStop","fillStyle","beginPath","arc","Math","random","PI","closePath","fill","restore","Rocket","explosionColor","explode","i","explode_debris_num","particle","angle","speed","cos","sin","explode_particles_size","explode_particles_resistance","push","init","dom","options","document","getElementById","console","log","frequency","launch_speed","launch_particles_size","debris_num","width","body","clientWidth","height","clientHeight","top","bottom","left","right","zIndex","createElement","id","style","position","opacity","getContext","appendChild","setInterval","reload","loop","length","rocket","floor","window","innerWidth","innerHeight","clearRect","existingRockets","distance","sqrt","pow","randomChance","existingParticles","j","shift","start","clearInterval","stop","setTimeout"],"sources":["D:/大連/WebApp/quiz-app/node_modules/react-fireworks/react-fireworks.js"],"sourcesContent":["//创建变量\r\nlet fireworksField = \"\",\r\n  opt = {},\r\n  particles = [],\r\n  rockets = [],\r\n  //最大爆炸粒子数量，与每颗烟花爆炸的粒子数关联，影响爆炸后粒子的消失时间\r\n  MAX_PARTICLES = 0,\r\n  SCREEN_WIDTH = 0,\r\n  SCREEN_HEIGHT = 0,\r\n  SCREEN_TOP,\r\n  SCREEN_BOTTOM,\r\n  SCREEN_LEFT,\r\n  SCREEN_RIGHT,\r\n  Z_INDEX,\r\n  canvas,\r\n  context;\r\n\r\nlet reloadTimer;\r\nlet loopTimer;\r\n\r\n//粒子类\r\nclass Particle{\r\n  constructor(pos){\r\n    this.pos = {\r\n      x: pos ? pos.x : 0,\r\n      y: pos ? pos.y : 0\r\n    };\r\n    this.vel = {\r\n      x: 0,\r\n      y: 0\r\n    };\r\n    this.shrink = 0.97;\r\n    this.size = 2;\r\n    this.resistance = 1;\r\n    this.gravity = 0;\r\n    this.flick = false;\r\n    this.alpha = 1;\r\n    this.fade = 0;\r\n    this.color = 0;\r\n  }\r\n\r\n  update(){\r\n    // apply resistance\r\n    this.vel.x *= this.resistance;\r\n    this.vel.y *= this.resistance;\r\n    // gravity down\r\n    this.vel.y += this.gravity;\r\n    // update position based on speed\r\n    this.pos.x += this.vel.x;\r\n    this.pos.y += this.vel.y;\r\n    // shrink\r\n    this.size *= this.shrink;\r\n    // fade out\r\n    this.alpha -= this.fade;\r\n  }\r\n\r\n  render(c){\r\n    if (!this.exists()) {\r\n      return;\r\n    }\r\n    c.save();\r\n    c.globalCompositeOperation = 'lighter';\r\n    let x = this.pos.x,\r\n      y = this.pos.y,\r\n      r = this.size / 2;\r\n    let gradient = c.createRadialGradient(x, y, 0.1, x, y, r);\r\n    gradient.addColorStop(0.1, \"rgba(255,255,255,\" + this.alpha + \")\");\r\n    gradient.addColorStop(0.8, \"hsla(\" + this.color + \", 100%, 50%, \" + this.alpha + \")\");\r\n    gradient.addColorStop(1, \"hsla(\" + this.color + \", 100%, 50%, 0.1)\");\r\n    c.fillStyle = gradient;\r\n    c.beginPath();\r\n    c.arc(this.pos.x, this.pos.y, this.flick ? Math.random() * this.size : this.size, 0, Math.PI * 2, true);\r\n    c.closePath();\r\n    c.fill();\r\n    c.restore();\r\n  }\r\n\r\n  exists(){\r\n    return this.alpha >= 0.1 && this.size >= 1;\r\n  }\r\n}\r\n\r\n//装弹类\r\nclass Rocket extends Particle{\r\n  constructor(x) {\r\n    super({\r\n      x: x,\r\n      y: SCREEN_HEIGHT\r\n    });\r\n    this.explosionColor = 0;\r\n  }\r\n\r\n  explode(){\r\n    //爆炸的粒子数量\r\n    for (let i = 0; i < opt.explode_debris_num; i++) {\r\n      let particle = new Particle(this.pos);\r\n      let angle = Math.random() * Math.PI * 2;\r\n      // emulate 3D effect by using cosine and put more particles in the middle\r\n      let speed = Math.cos(Math.random() * Math.PI / 2) * 15;\r\n      particle.vel.x = Math.cos(angle) * speed;\r\n      particle.vel.y = Math.sin(angle) * speed;\r\n      //爆炸的粒子大小\r\n      particle.size = opt.explode_particles_size;\r\n      particle.gravity = 0.2;\r\n      particle.resistance =  0.9 + opt.explode_particles_resistance * 0.01;\r\n      particle.shrink = Math.random() * 0.05 + 0.95;\r\n      particle.flick = true;\r\n      particle.color = this.explosionColor;\r\n      particles.push(particle);\r\n    }\r\n  }\r\n\r\n  render(c){\r\n    if (!this.exists()) {\r\n      return;\r\n    }\r\n    c.save();\r\n    c.globalCompositeOperation = 'lighter';\r\n    let x = this.pos.x,\r\n      y = this.pos.y,\r\n      r = this.size / 2;\r\n    let gradient = c.createRadialGradient(x, y, 0.1, x, y, r);\r\n    gradient.addColorStop(0.1, \"rgba(255, 255, 255 ,\" + this.alpha + \")\");\r\n    gradient.addColorStop(1, \"rgba(0, 0, 0, \" + this.alpha + \")\");\r\n    c.fillStyle = gradient;\r\n    c.beginPath();\r\n    c.arc(this.pos.x, this.pos.y, this.flick ? Math.random() * this.size / 2 + this.size / 2 : this.size, 0, Math.PI * 2, true);\r\n    c.closePath();\r\n    c.fill();\r\n    c.restore();\r\n  }\r\n}\r\n\r\nexport default  {\r\n  /**\r\n   * 初始化烟花\r\n   * @param dom\r\n   * @param options：\r\n   * 1、width 宽度 单位px\r\n   * 2、height 高度 单位px\r\n   * 3、top，bottom，left，right 绝对布局参数\r\n   * 2、frequency 烟花发射频率 单位：毫秒\r\n   * 3、launch_speed 烟花发射速度 （推荐值：5-10）\r\n   * 4、launch_particles_size 烟花发射粒子大小（推荐值：0-10）\r\n   * 5、explode_particles_resistance 爆炸粒子半径 （推荐值：4-10）\r\n   * 6、explode_debris_num 爆炸粒子个数\r\n   * 7、explode_particles_size 爆炸粒子大小\r\n   * 8、z_index canvas层级\r\n   * @returns {string}\r\n   */\r\n  init:function (dom,options) {\r\n    if (!dom || typeof(dom) !== \"string\" || document.getElementById(dom) == null){\r\n      console.log(\"id对象不存在\");\r\n    }\r\n    else{\r\n      fireworksField = document.getElementById(dom);\r\n      //配置默认\r\n      opt.frequency = options.frequency || 200;\r\n      opt.launch_speed = options.launch_speed || 12;\r\n      opt.launch_particles_size = options.launch_particles_size || 0;\r\n      opt.explode_debris_num =  Math.random() * 10 + (options.debris_num || 150);\r\n      opt.explode_particles_resistance = options.explode_particles_resistance || 5;\r\n      opt.explode_particles_size = options.explode_particles_resistance || 10;\r\n      SCREEN_WIDTH = options.width || document.body.clientWidth + \"px\";\r\n      SCREEN_HEIGHT = options.height || document.body.clientHeight+ \"px\";\r\n      SCREEN_TOP = options.top || '0px';\r\n      SCREEN_BOTTOM = options.bottom || '0px';\r\n      SCREEN_LEFT = options.left || '0px';\r\n      SCREEN_RIGHT = options.right || '0px';\r\n      Z_INDEX = options.zIndex || 100;\r\n      MAX_PARTICLES = opt.explode_debris_num * 10;\r\n\r\n      //创建canvas\r\n      canvas = document.createElement('canvas');\r\n      canvas.id = 'fireworksField';\r\n      canvas.style.width = SCREEN_WIDTH;\r\n      canvas.style.height = SCREEN_HEIGHT;\r\n      canvas.style.position = 'absolute';\r\n      canvas.style.top = SCREEN_TOP;\r\n      canvas.style.bottom = SCREEN_BOTTOM;\r\n      canvas.style.left = SCREEN_LEFT;\r\n      canvas.style.right = SCREEN_RIGHT;\r\n      canvas.style.opacity = 1;\r\n      canvas.style.zIndex = Z_INDEX;\r\n      context = canvas.getContext('2d');\r\n\r\n      fireworksField.appendChild(canvas);\r\n      //XX毫秒执行一次装弹\r\n      reloadTimer = setInterval(this.reload, opt.frequency);\r\n\r\n      loopTimer = setInterval(this.loop, 50);\r\n    }\r\n  },\r\n\r\n  reload:function () {\r\n    if (rockets.length < 100) {\r\n      let rocket = new Rocket(Math.random() * SCREEN_WIDTH);\r\n      rocket.explosionColor = Math.floor(Math.random() * 360 / 10) * 10;\r\n      rocket.vel.y = -1 * opt.launch_speed;\r\n      rocket.vel.x = Math.random() * 2 - 1;\r\n      //发射轨迹的大小 0：无轨迹\r\n      rocket.size = opt.launch_particles_size;\r\n      //发射轨迹从发射到爆炸的逐渐放大或缩小指数，呈指数增长\r\n      rocket.shrink = 1.008;\r\n      //发射轨迹的重力\r\n      rocket.gravity = 0.005;\r\n      rockets.push(rocket);\r\n    }\r\n  },\r\n\r\n  loop:function () {\r\n    //调整宽高\r\n    if (SCREEN_WIDTH !== window.innerWidth) {\r\n      canvas.width = SCREEN_WIDTH = window.innerWidth;\r\n    }\r\n    if (SCREEN_HEIGHT !== window.innerHeight) {\r\n      canvas.height = SCREEN_HEIGHT = window.innerHeight;\r\n    }\r\n    // clear canvas\r\n    context.fillStyle = \"rgba(0, 0, 0, 0.05)\";\r\n    context.clearRect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT);\r\n\r\n    //设置存在的Rockets数组\r\n    let existingRockets = [];\r\n\r\n    for (let i = 0; i < rockets.length; i++) {\r\n      //更新渲染\r\n      rockets[i].update();\r\n      rockets[i].render(context);\r\n      // calculate distance with Pythagoras\r\n      let distance = Math.sqrt(Math.pow(SCREEN_WIDTH - rockets[i].pos.x, 2) + Math.pow(SCREEN_HEIGHT - rockets[i].pos.y, 2));\r\n      // random chance of 1% if rockets is above the middle\r\n      let randomChance = rockets[i].pos.y < (SCREEN_HEIGHT * 2 / 3) ? (Math.random() * 100 <= 1) : false;\r\n      /* Explosion rules\r\n       - 80% of screen\r\n       - going down\r\n       - close to the mouse\r\n       - 1% chance of random explosion\r\n       */\r\n      if (rockets[i].pos.y < SCREEN_HEIGHT / 5 || rockets[i].vel.y >= 0 || distance < 50 || randomChance) {\r\n        rockets[i].explode();\r\n      } else {\r\n        existingRockets.push(rockets[i]);\r\n      }\r\n    }\r\n    rockets = existingRockets;\r\n    let existingParticles = [];\r\n    for (let j = 0; j < particles.length; j++) {\r\n      particles[j].update();\r\n      // render and save particles that can be rendered\r\n      if (particles[j].exists()) {\r\n        particles[j].render(context);\r\n        existingParticles.push(particles[j]);\r\n      }\r\n    }\r\n    // update array with existing particles - old particles should be garbage collected\r\n    particles = existingParticles;\r\n    while (particles.length > MAX_PARTICLES) {\r\n      particles.shift();\r\n    }\r\n  },\r\n\r\n  start:function () {\r\n    if (reloadTimer){\r\n      clearInterval(reloadTimer);\r\n    }\r\n    if(loopTimer){\r\n      clearInterval(loopTimer);\r\n    }\r\n    reloadTimer = setInterval(this.reload, opt.frequency);\r\n    //XX毫秒执行一次刷新canvas\r\n    loopTimer = setInterval(this.loop, 50);\r\n  },\r\n\r\n  stop:function () {\r\n    clearInterval(reloadTimer);\r\n    //20秒后清除loop定时器\r\n    setTimeout(function () {\r\n      clearInterval(loopTimer);\r\n    },20000)\r\n  },\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}