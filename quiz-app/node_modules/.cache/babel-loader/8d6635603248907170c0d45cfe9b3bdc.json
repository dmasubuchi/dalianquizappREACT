{"ast":null,"code":"import _objectSpread from \"D:\\\\\\u5927\\u9023\\\\WebApp\\\\quiz-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"D:\\\\\\u5927\\u9023\\\\WebApp\\\\quiz-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\\\u5927\\u9023\\\\WebApp\\\\quiz-app\\\\src\\\\App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nfunction App() {\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    wordData = _useState2[0],\n    setWordData = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentQuestion = _useState4[0],\n    setCurrentQuestion = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedAnswer = _useState6[0],\n    setSelectedAnswer = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    isCorrect = _useState8[0],\n    setIsCorrect = _useState8[1];\n  useEffect(function () {\n    fetch('wordlist.json').then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      return setWordData(data);\n    });\n  }, []);\n  var handleStart = function handleStart() {\n    generateQuestion(wordData);\n  };\n  var generateQuestion = function generateQuestion(data) {\n    var randomIndex = Math.floor(Math.random() * data.length);\n    var selectedWord = data[randomIndex];\n    var filteredData = data.filter(function (item) {\n      return item.category === selectedWord.category && item.japanese !== selectedWord.japanese;\n    });\n    var option1 = filteredData[Math.floor(Math.random() * filteredData.length)];\n    var option2 = filteredData[Math.floor(Math.random() * filteredData.length)];\n    setCurrentQuestion(_objectSpread({}, selectedWord, {\n      choices: [selectedWord.chinese, option1.chinese, option2.chinese].sort(function () {\n        return Math.random() - 0.5;\n      }),\n      showImage: false\n    }));\n  };\n  var handleAnswerClick = function handleAnswerClick(answer) {\n    setSelectedAnswer(answer);\n    setIsCorrect(answer === currentQuestion.chinese);\n    setCurrentQuestion(_objectSpread({}, currentQuestion, {\n      showImage: true\n    }));\n  };\n  var handleNextClick = function handleNextClick() {\n    setSelectedAnswer(null);\n    setIsCorrect(null);\n    generateQuestion(wordData);\n  };\n  var speak = function speak(text, lang) {\n    // 音声を読み上げる処理を追加することができます（実際の実装はブラウザや外部ライブラリに依存します）。\n    // この関数内で指定したテキスト（text）と言語（lang）に基づいて音声を再生できます。\n    // ブラウザのWeb Speech APIなどを使用することができます。\n  };\n  if (wordData.length === 0) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, currentQuestion ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, currentQuestion.japanese, \" \\u306F\\u3069\\u3093\\u306A\\u610F\\u5473\\u3067\\u3057\\u3087\\u3046\\uFF1F\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      return speak(currentQuestion.japanese, 'ja-JP');\n    },\n    className: \"speak-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"\\uD83D\\uDDE3\")) : 'Ready to Start?'), currentQuestion && currentQuestion.showImage && /*#__PURE__*/React.createElement(\"img\", {\n    src: currentQuestion.image,\n    alt: currentQuestion.english,\n    className: \"question-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"choices\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, currentQuestion && currentQuestion.choices.map(function (choice, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return handleAnswerClick(choice);\n      },\n      disabled: selectedAnswer !== null,\n      className: \"button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, choice), selectedAnswer === choice && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"result\",\n      style: {\n        color: isCorrect ? 'blue' : 'red'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }, isCorrect ? '正解' : '不正解'), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: function onClick() {\n        return speak(choice, 'zh-CN');\n      },\n      className: \"speak-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"\\uD83D\\uDDE3\"));\n  })), currentQuestion ? /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleNextClick,\n    disabled: selectedAnswer === null,\n    className: \"button next-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, \"\\u6B21\\u306E\\u554F\\u984C\") : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleStart,\n    className: \"button start-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, \"Start\")));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","App","_this","_useState","_useState2","_slicedToArray","wordData","setWordData","_useState3","_useState4","currentQuestion","setCurrentQuestion","_useState5","_useState6","selectedAnswer","setSelectedAnswer","_useState7","_useState8","isCorrect","setIsCorrect","fetch","then","response","json","data","handleStart","generateQuestion","randomIndex","Math","floor","random","length","selectedWord","filteredData","filter","item","category","japanese","option1","option2","_objectSpread","choices","chinese","sort","showImage","handleAnswerClick","answer","handleNextClick","speak","text","lang","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","Fragment","onClick","src","image","alt","english","map","choice","index","key","disabled","style","color"],"sources":["D:/大連/WebApp/quiz-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [wordData, setWordData] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [selectedAnswer, setSelectedAnswer] = useState(null);\n  const [isCorrect, setIsCorrect] = useState(null);\n\n  useEffect(() => {\n    fetch('wordlist.json')\n      .then((response) => response.json())\n      .then((data) => setWordData(data));\n  }, []);\n\n  const handleStart = () => {\n    generateQuestion(wordData);\n  };\n\n  const generateQuestion = (data) => {\n    const randomIndex = Math.floor(Math.random() * data.length);\n    const selectedWord = data[randomIndex];\n    const filteredData = data.filter((item) => item.category === selectedWord.category && item.japanese !== selectedWord.japanese);\n    const option1 = filteredData[Math.floor(Math.random() * filteredData.length)];\n    const option2 = filteredData[Math.floor(Math.random() * filteredData.length)];\n    setCurrentQuestion({\n      ...selectedWord,\n      choices: [selectedWord.chinese, option1.chinese, option2.chinese].sort(() => Math.random() - 0.5),\n      showImage: false,\n    });\n  };\n\n  const handleAnswerClick = (answer) => {\n    setSelectedAnswer(answer);\n    setIsCorrect(answer === currentQuestion.chinese);\n    setCurrentQuestion({ ...currentQuestion, showImage: true });\n  };\n\n  const handleNextClick = () => {\n    setSelectedAnswer(null);\n    setIsCorrect(null);\n    generateQuestion(wordData);\n  };\n\n  const speak = (text, lang) => {\n    // 音声を読み上げる処理を追加することができます（実際の実装はブラウザや外部ライブラリに依存します）。\n    // この関数内で指定したテキスト（text）と言語（lang）に基づいて音声を再生できます。\n    // ブラウザのWeb Speech APIなどを使用することができます。\n  };\n\n  if (wordData.length === 0) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"container\">\n        <h1 className=\"question\">\n          {currentQuestion ? (\n            <>\n              <span>{currentQuestion.japanese} はどんな意味でしょう？</span>\n              <button onClick={() => speak(currentQuestion.japanese, 'ja-JP')} className=\"speak-button\">\n                🗣\n              </button>\n            </>\n          ) : (\n            'Ready to Start?'\n          )}\n        </h1>\n        {currentQuestion && currentQuestion.showImage && (\n          <img src={currentQuestion.image} alt={currentQuestion.english} className=\"question-image\" />\n        )}\n        <div className=\"choices\">\n          {currentQuestion &&\n            currentQuestion.choices.map((choice, index) => (\n              <div key={index}>\n                <button onClick={() => handleAnswerClick(choice)} disabled={selectedAnswer !== null} className=\"button\">\n                  {choice}\n                </button>\n                {selectedAnswer === choice && (\n                  <span className=\"result\" style={{ color: isCorrect ? 'blue' : 'red' }}>\n                    {isCorrect ? '正解' : '不正解'}\n                  </span>\n                )}\n                <button onClick={() => speak(choice, 'zh-CN')} className=\"speak-button\">\n                  🗣\n                </button>\n              </div>\n            ))}\n        </div>\n        {currentQuestion ? (\n          <button onClick={handleNextClick} disabled={selectedAnswer === null} className=\"button next-button\">\n            次の問題\n          </button>\n        ) : (\n          <button onClick={handleStart} className=\"button start-button\">\n            Start\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAElB,SAASC,GAAGA,CAAA,EAAG;EAAA,IAAAC,KAAA;EAAA,IAAAC,SAAA,GACmBJ,QAAQ,CAAC,EAAE,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArCG,QAAQ,GAAAF,UAAA;IAAEG,WAAW,GAAAH,UAAA;EAAA,IAAAI,UAAA,GACkBT,QAAQ,CAAC,IAAI,CAAC;IAAAU,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAArDE,eAAe,GAAAD,UAAA;IAAEE,kBAAkB,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACEb,QAAQ,CAAC,IAAI,CAAC;IAAAc,UAAA,GAAAR,cAAA,CAAAO,UAAA;IAAnDE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAAA,IAAAG,UAAA,GACNjB,QAAQ,CAAC,IAAI,CAAC;IAAAkB,UAAA,GAAAZ,cAAA,CAAAW,UAAA;IAAzCE,SAAS,GAAAD,UAAA;IAAEE,YAAY,GAAAF,UAAA;EAE9BjB,SAAS,CAAC,YAAM;IACdoB,KAAK,CAAC,eAAe,CAAC,CACnBC,IAAI,CAAC,UAACC,QAAQ;MAAA,OAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC;IAAA,EAAC,CACnCF,IAAI,CAAC,UAACG,IAAI;MAAA,OAAKjB,WAAW,CAACiB,IAAI,CAAC;IAAA,EAAC;EACtC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBC,gBAAgB,CAACpB,QAAQ,CAAC;EAC5B,CAAC;EAED,IAAMoB,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAIF,IAAI,EAAK;IACjC,IAAMG,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,IAAI,CAACO,MAAM,CAAC;IAC3D,IAAMC,YAAY,GAAGR,IAAI,CAACG,WAAW,CAAC;IACtC,IAAMM,YAAY,GAAGT,IAAI,CAACU,MAAM,CAAC,UAACC,IAAI;MAAA,OAAKA,IAAI,CAACC,QAAQ,KAAKJ,YAAY,CAACI,QAAQ,IAAID,IAAI,CAACE,QAAQ,KAAKL,YAAY,CAACK,QAAQ;IAAA,EAAC;IAC9H,IAAMC,OAAO,GAAGL,YAAY,CAACL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGG,YAAY,CAACF,MAAM,CAAC,CAAC;IAC7E,IAAMQ,OAAO,GAAGN,YAAY,CAACL,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGG,YAAY,CAACF,MAAM,CAAC,CAAC;IAC7EpB,kBAAkB,CAAA6B,aAAA,KACbR,YAAY;MACfS,OAAO,EAAE,CAACT,YAAY,CAACU,OAAO,EAAEJ,OAAO,CAACI,OAAO,EAAEH,OAAO,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC;QAAA,OAAMf,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,GAAG;MAAA,EAAC;MACjGc,SAAS,EAAE;IAAK,EACjB,CAAC;EACJ,CAAC;EAED,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,MAAM,EAAK;IACpC/B,iBAAiB,CAAC+B,MAAM,CAAC;IACzB3B,YAAY,CAAC2B,MAAM,KAAKpC,eAAe,CAACgC,OAAO,CAAC;IAChD/B,kBAAkB,CAAA6B,aAAA,KAAM9B,eAAe;MAAEkC,SAAS,EAAE;IAAI,EAAE,CAAC;EAC7D,CAAC;EAED,IAAMG,eAAe,GAAG,SAAlBA,eAAeA,CAAA,EAAS;IAC5BhC,iBAAiB,CAAC,IAAI,CAAC;IACvBI,YAAY,CAAC,IAAI,CAAC;IAClBO,gBAAgB,CAACpB,QAAQ,CAAC;EAC5B,CAAC;EAED,IAAM0C,KAAK,GAAG,SAARA,KAAKA,CAAIC,IAAI,EAAEC,IAAI,EAAK;IAC5B;IACA;IACA;EAAA,CACD;EAED,IAAI5C,QAAQ,CAACyB,MAAM,KAAK,CAAC,EAAE;IACzB,oBAAOjC,KAAA,CAAAqD,aAAA;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAK,YAAe,CAAC;EAC9B;EAEA,oBACE3D,KAAA,CAAAqD,aAAA;IAAKO,SAAS,EAAC,KAAK;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClB3D,KAAA,CAAAqD,aAAA;IAAKO,SAAS,EAAC,WAAW;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACxB3D,KAAA,CAAAqD,aAAA;IAAIO,SAAS,EAAC,UAAU;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrB/C,eAAe,gBACdZ,KAAA,CAAAqD,aAAA,CAAArD,KAAA,CAAA6D,QAAA,qBACE7D,KAAA,CAAAqD,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAO/C,eAAe,CAAC2B,QAAQ,EAAC,qEAAkB,CAAC,eACnDvC,KAAA,CAAAqD,aAAA;IAAQS,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMZ,KAAK,CAACtC,eAAe,CAAC2B,QAAQ,EAAE,OAAO,CAAC;IAAA,CAAC;IAACqB,SAAS,EAAC,cAAc;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,cAElF,CACR,CAAC,GAEH,iBAEA,CAAC,EACJ/C,eAAe,IAAIA,eAAe,CAACkC,SAAS,iBAC3C9C,KAAA,CAAAqD,aAAA;IAAKU,GAAG,EAAEnD,eAAe,CAACoD,KAAM;IAACC,GAAG,EAAErD,eAAe,CAACsD,OAAQ;IAACN,SAAS,EAAC,gBAAgB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC5F,eACD3D,KAAA,CAAAqD,aAAA;IAAKO,SAAS,EAAC,SAAS;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrB/C,eAAe,IACdA,eAAe,CAAC+B,OAAO,CAACwB,GAAG,CAAC,UAACC,MAAM,EAAEC,KAAK;IAAA,oBACxCrE,KAAA,CAAAqD,aAAA;MAAKiB,GAAG,EAAED,KAAM;MAAAf,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACd3D,KAAA,CAAAqD,aAAA;MAAQS,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMf,iBAAiB,CAACqB,MAAM,CAAC;MAAA,CAAC;MAACG,QAAQ,EAAEvD,cAAc,KAAK,IAAK;MAAC4C,SAAS,EAAC,QAAQ;MAAAN,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACpGS,MACK,CAAC,EACRpD,cAAc,KAAKoD,MAAM,iBACxBpE,KAAA,CAAAqD,aAAA;MAAMO,SAAS,EAAC,QAAQ;MAACY,KAAK,EAAE;QAAEC,KAAK,EAAErD,SAAS,GAAG,MAAM,GAAG;MAAM,CAAE;MAAAkC,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GACnEvC,SAAS,GAAG,IAAI,GAAG,KAChB,CACP,eACDpB,KAAA,CAAAqD,aAAA;MAAQS,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAMZ,KAAK,CAACkB,MAAM,EAAE,OAAO,CAAC;MAAA,CAAC;MAACR,SAAS,EAAC,cAAc;MAAAN,MAAA,EAAAlD,KAAA;MAAAmD,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,cAEhE,CACL,CAAC;EAAA,CACP,CACA,CAAC,EACL/C,eAAe,gBACdZ,KAAA,CAAAqD,aAAA;IAAQS,OAAO,EAAEb,eAAgB;IAACsB,QAAQ,EAAEvD,cAAc,KAAK,IAAK;IAAC4C,SAAS,EAAC,oBAAoB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,0BAE5F,CAAC,gBAET3D,KAAA,CAAAqD,aAAA;IAAQS,OAAO,EAAEnC,WAAY;IAACiC,SAAS,EAAC,qBAAqB;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,OAEtD,CAEP,CACF,CAAC;AAEV;AAEA,eAAexD,GAAG"},"metadata":{},"sourceType":"module"}